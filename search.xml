<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>HTML5权威指南 Chapter 9 Grouping Content</title>
      <link href="/2021/04/06/Chapter-9-Grouping-Content/"/>
      <url>/2021/04/06/Chapter-9-Grouping-Content/</url>
      <content type="html"><![CDATA[<p>This chapter is for the elements that could group related content together.这些元素能够给予文档一个整体的架构，并且可以给一些内容进一步的意义。</p><h2 id="理解为什么要给内容分组"><a href="#理解为什么要给内容分组" class="headerlink" title="理解为什么要给内容分组"></a>理解为什么要给内容分组</h2><p>浏览器在呈现HTML文档的时候，会把内容中的多行空白压缩成一个空格，这样就把浏览器所呈现的布局和HTML文档源码布局给区分开来了。正因为HTML源码中的结构无法影响浏览器所呈现出来的网页页面，我们才需要使用Grouping Elements来给文档构建起架构来。本章所给出的标签可以让你将相连区块的内容聚成各自的小组。</p><h2 id="创建段落（paragraphs）"><a href="#创建段落（paragraphs）" class="headerlink" title="创建段落（paragraphs）"></a>创建段落（paragraphs）</h2><p>p 标签<code>&lt;p&gt;</code>，主要用于包裹某<strong>一个</strong>论点或者想法的几句话，当然，有时候也可以用于某个主题（theme）下的几个论点或者是想法。<br>一个<code>p</code>标签内的空白行仍然会被折叠成<strong>单个空格字符</strong></p><h2 id="使用div元素"><a href="#使用div元素" class="headerlink" title="使用div元素"></a>使用<code>div</code>元素</h2><p><code>div</code>元素并没有特别的意义，当其他HTML元素无法满足你的需求时，可以使用<code>div</code>。在使用时，通常通过一些全局属性（所有标签都有的属性）来给<code>div</code>加上意义，一般是<code>class</code>或者<code>id</code>这种属性。<br>使用自定义架构的一个问题就是自定义的部分其意义对于自己来说是熟悉的，但是很有可能看的人看不懂，不利于第三方处理文档。<br>当一组或者多个段落都需要使用同一种样式的时候，可以使用<code>div</code>来包裹，然后使用class等熟悉定义样式，由于父子元素在样式上的继承特性，其所包含的子元素可以直接应用<code>div</code>所有的部分样式。</p><h2 id="保留内容自身的格式"><a href="#保留内容自身的格式" class="headerlink" title="保留内容自身的格式"></a>保留内容自身的格式</h2><p><code>pre</code>标签能够保留该标签所包含内容自带的格式。该标签内的HTML源码有多少空行他就会保留多少空行。由于该标签无法让你通过标签和样式来控制显示效果，所以使用的时候要谨慎。<br>比较典型的应用就是使用<code>pre</code>标签来保存<code>code</code>标签所包含的内容，由于<code>code</code>标签内的内容通常需要包含一些自带的样式，那些代码、显示结果之间的空行和缩进是不能被省略的，所以通常这些内容需要使用<code>pre</code></p><h2 id="从其他源引用内容"><a href="#从其他源引用内容" class="headerlink" title="从其他源引用内容"></a>从其他源引用内容</h2><p><code>blockquote</code>标签主要用于引用其他地方的一块内容。该元素和第8章所讲的<code>q</code>标签比较相似，只是<code>blockquote</code>主要用于大块内容的引用。<code>cite</code>属性用来指定引用内容的URL（就是该段引用内容的出处文档地址）。<br>这里值得注意的是<code>blockquote</code>并不会保留引用内容的格式，如果需要分段或者分割线的话，就要使用对应的<code>p</code>、<code>hr</code>这些标签。</p><h2 id="添加主题分隔"><a href="#添加主题分隔" class="headerlink" title="添加主题分隔"></a>添加主题分隔</h2><p><code>hr</code>元素代表段落级别的主题分隔，样式上的表现是一条水平分隔线。<code>hr</code>在HTML5中代表转向另一个相关点（topic）。<br><code>hr</code>元素的有效使用在文档明细中的定义比较模糊，只有两个例子，一个是故事中的场景转换；另一个是在一本相关书籍中，在一个section内，两个topic之间的转变。</p><h2 id="使用List来将内容分组"><a href="#使用List来将内容分组" class="headerlink" title="使用List来将内容分组"></a>使用List来将内容分组</h2><p>HTML5中定义了很多元素来创建列表，主要有无序列表，有序列表和描述性列表。</p><h3 id="有序列表-ol元素"><a href="#有序列表-ol元素" class="headerlink" title="有序列表(ol元素)"></a>有序列表(<code>ol</code>元素)</h3><p>定义有序列表（ordered list）的标签是<code>ol</code>，内部每一个条目是使用<code>li</code>来包裹。<br>要想修改有序列表的一些参数，主要是通过各种属性来修改。</p><p><ul></ul></p><ul><li>修改第一个元素的顺序值（ordinal value）——使用<code>start</code>属性，它的值将会被作为第一个元素的序数值。如果该值未被指定，那么有序列表默认从1开始计数。</li><li><code>type</code>可以指定列表条目(<code>li</code>)的计数标志，共有以下几种可以选择：<br>  <ul><ul><li>“1”（默认值），代表使用数字;</li><li>“a”,表示使用a,b,c,d……来作为顺序的标志；</li><li>“A”，使用大写的英文字母来标记顺序；</li><li>“i”，使用小写的罗马数字来标记；</li><li>“I”，使用大写的罗马数字来标记。<br></li></ul><br></ul><h3 id="无序列表标签（ul标签）"><a href="#无序列表标签（ul标签）" class="headerlink" title="无序列表标签（ul标签）"></a>无序列表标签（<code>ul</code>标签）</h3><code>ul</code>标签用来只是无序列表，无序列表内的每个条目使用<code>li</code>标签来包裹。<br>这里要注意的是，<code>ul</code>标签是没有用来修改样式的属性的，也就是说<code>ul</code>标签自带的只有实心点来指示条目，如果想要修改样式，就需要使用<code>list-style-type</code>这一个CSS property来修改。<h3 id="li元素的使用"><a href="#li元素的使用" class="headerlink" title="li元素的使用"></a><code>li</code>元素的使用</h3><code>li</code>元素主要用于指示列表中的一个item。需要注意的是在有序列表<code>ol</code>中的<code>li</code>可以通过属性<code>value</code>的值来修改当前的计数器，后面的条目会在当前值的基础上往上加。例如：<br>&lt;li value=”4”&gt;mangoes&lt;/li&gt;，那么后面的就是5，6……了。<h3 id="创建描述性列表"><a href="#创建描述性列表" class="headerlink" title="创建描述性列表"></a>创建描述性列表</h3>所谓的描述性列表就是列表的每一个条目包含了条目名称和条目定义两个内容。描述性列表所对应的标签是<code>dl</code>（description list），<code>dl</code>中的每一个条目以term/description grouping的形式存在。指示term的标签是<code>dt</code>；指示description的标签是<code>dd</code>。这三个标签都没有local attributes。<br>一个<code>dt</code>下可以对应多个<code>dd</code>，<code>dd</code>内也可以使用各种其他标签，诸如<code>i</code>、<code>b</code>等。<h3 id="创建自定义的列表"><a href="#创建自定义的列表" class="headerlink" title="创建自定义的列表"></a>创建自定义的列表</h3>自定义列表是使用无序列表（unordered list）<code>ul</code>，然后配合CSS样式表中的<code>counter</code>特性和<code>:before</code>，<code>:after</code>这种选择器来完成。具体将在第17章讲解。<h2 id="使用图表（figures）"><a href="#使用图表（figures）" class="headerlink" title="使用图表（figures）"></a>使用图表（figures）</h2>传统的<code>figure</code>标签定义的就是图表（diagram or illustration），HTML5中定义的figure其语义化意义更加宽泛，只要是和文章主线相关的一个独立的单独单元就可以。也就是说，代码段或者一些输出，图片等，都可以使用<code>figure</code>标签来展示。<br><code>figure</code>标签有一个可选的内部元素<code>figcaption</code>，该标签主要用来包裹图表的标题（caption）。</li></ul>]]></content>
      
      <categories>
          
          <category> HTML5权威指南 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML5权威指南 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>hexo在deploy时无需一直输入用户名密码</title>
      <link href="/2021/04/02/hexo-deploy%E6%97%B6%E6%97%A0%E9%9C%80%E4%B8%80%E7%9B%B4%E8%BE%93%E5%85%A5%E7%94%A8%E6%88%B7%E5%90%8D%E5%AF%86%E7%A0%81/"/>
      <url>/2021/04/02/hexo-deploy%E6%97%B6%E6%97%A0%E9%9C%80%E4%B8%80%E7%9B%B4%E8%BE%93%E5%85%A5%E7%94%A8%E6%88%B7%E5%90%8D%E5%AF%86%E7%A0%81/</url>
      <content type="html"><![CDATA[<p>在hexo deploy的时候，一直需要输入用户名和密码，在网上找了很久过后，终于找到了解决方案，这里记录下来：</p><ol><li><p>在系统环境变量中创建一个环境变量：</p><blockquote><p>变量名：HOME<br>变量值：%USERPROFILE%</p></blockquote></li><li><p>在用户目录下新建一个文件，文件名为：.netrc，没有后缀名。然后使用文本文档打开文件，文件内写入如下内容：</p><blockquote><p>machine github.com<br>login username //这里的username输入自己账号用户名<br>password password //这里的password所在位置输入密码</p></blockquote></li></ol>]]></content>
      
      
        <tags>
            
            <tag> blog遇到的问题 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HTML5权威指南第6至8章</title>
      <link href="/2021/04/02/HTML5%E6%9D%83%E5%A8%81%E6%8C%87%E5%8D%976%E8%87%B38%E7%AB%A0/"/>
      <url>/2021/04/02/HTML5%E6%9D%83%E5%A8%81%E6%8C%87%E5%8D%976%E8%87%B38%E7%AB%A0/</url>
      <content type="html"><![CDATA[<h3 id="这是HTML5权威指南第六章"><a href="#这是HTML5权威指南第六章" class="headerlink" title="这是HTML5权威指南第六章"></a>这是<a href="http://www.xmind.net/m/Y2sZxC" target="_blank" rel="noopener">HTML5权威指南第六章</a></h3><hr><h3 id="这是HTML5权威指南第七章"><a href="#这是HTML5权威指南第七章" class="headerlink" title="这是HTML5权威指南第七章"></a>这是<a href="http://www.xmind.net/m/x7EDeg" target="_blank" rel="noopener">HTML5权威指南第七章</a></h3><hr><h3 id="这是HTML5权威指南第八章"><a href="#这是HTML5权威指南第八章" class="headerlink" title="这是HTML5权威指南第八章"></a>这是<a href="http://www.xmind.net/m/Uv3TRz" target="_blank" rel="noopener">HTML5权威指南第八章</a></h3>]]></content>
      
      <categories>
          
          <category> HTML5权威指南 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML5权威指南 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HTML5权威指南第5章</title>
      <link href="/2021/04/02/HTML5%E6%9D%83%E5%A8%81%E6%8C%87%E5%8D%97%E7%AC%AC5%E7%AB%A0/"/>
      <url>/2021/04/02/HTML5%E6%9D%83%E5%A8%81%E6%8C%87%E5%8D%97%E7%AC%AC5%E7%AB%A0/</url>
      <content type="html"><![CDATA[<p>这是HTML5权威指南第五章的思维导图，这里放上链接，我也把xmind分享到博客的iframe添加到了当前的博客文档中，但是无法显示。</p><hr><p>这个是链接：<a href="http://www.xmind.net/m/qHGB4r" target="_blank" rel="noopener">HTML5权威指南第5章</a></p><hr><iframe src="http://www.xmind.net/embed/96sjAP" width="900px" height="800px" frameborder="0" scrolling="no"></iframe>]]></content>
      
      <categories>
          
          <category> HTML5权威指南 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML5权威指南 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>HTML5权威指南1-4章</title>
      <link href="/2021/04/02/HTML5%E6%9D%83%E5%A8%81%E6%8C%87%E5%8D%971-4%E7%AB%A0/"/>
      <url>/2021/04/02/HTML5%E6%9D%83%E5%A8%81%E6%8C%87%E5%8D%971-4%E7%AB%A0/</url>
      <content type="html"><![CDATA[<h3 id="HTML5权威指南1-4章的思维导图"><a href="#HTML5权威指南1-4章的思维导图" class="headerlink" title="HTML5权威指南1-4章的思维导图"></a>HTML5权威指南1-4章的思维导图</h3><p>第四章写在了我的语雀知识库里面<a href="https://www.yuque.com/docs/share/a00c537d-bed3-46f0-a656-ba325f531de3?#" target="_blank" rel="noopener">《HTML权威指南》</a> ，当时把前面三章也都导入了进去，后来用了过后发现还是xmind好用，用了一段时间xmind过后，觉得markdown更适合HTML5权威指南这种书籍的笔记制作，所以现在把前面的思维导图传上来。后面就是直接使用<a href="https://obsidian.md/" target="_blank" rel="noopener">Obsidian</a> 这个软件加上Markdown语法来记笔记了。这个是xmind第一章到第四章思维导图的一个公链<a href="http://www.xmind.net/m/8DhEcL" target="_blank" rel="noopener">思维导图1-4章</a>，这里我发现xmind分享到blog的功能在markdown文档编辑器里面可以显示，但是上传到github博客过后就显示不出来了，所以放一个链接。</p><iframe src="http://www.xmind.net/embed/MXYsZX" width="1000px" height="800px" frameborder="0" scrolling="no"></iframe>]]></content>
      
      <categories>
          
          <category> HTML5权威指南 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> HTML5权威指南 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>CSAPP Global Edition习题错误（第二章）</title>
      <link href="/2020/10/22/CSAPP-Global-Edition%E7%BB%83%E4%B9%A0%E9%94%99%E8%AF%AF%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2020/10/22/CSAPP-Global-Edition%E7%BB%83%E4%B9%A0%E9%94%99%E8%AF%AF%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      <content type="html"><![CDATA[<h2 id="概要"><a href="#概要" class="headerlink" title="概要"></a>概要</h2><p>阅读CSAPP这本书的过程收获很多，笔记都记在了Notion上。由于这本书并没有官方电子版，只有纸质版，电子版的只有影印版和Global Edition，在查资料的时候才知道Global Edition中，教学材料都是和原版没有区别的，Practice和Problems却有很多都是不一样的，而且Practice的解答存在错误，所以我看的时候练习和每章后面的习题都是对着英文原版纸质书的影印版来看的，并且会与中文版（原书第三版）对照着检查，在博客里记录一下习题错误的位置。</p><h3 id="具体错误"><a href="#具体错误" class="headerlink" title="具体错误"></a>具体错误</h3><p><strong>Practice Problem 2.14（solution Page 183)</strong> P94</p><p>Global Edition 上写的</p><blockquote><p><strong>Practice Problem 2.14</strong></p><p>suppose that a and b have byte values 0x55 and 0x46,respectively……</p></blockquote><p>但是，影印版上显示的是</p><blockquote><p><strong>Practice Problem 2.14</strong></p><p>suppose that x and y have byte values 0x66 and 0x39, respectively……</p></blockquote><p>中文版和影印版上的是一致的。</p><blockquote><p>练习题 2.14 假设x和y的字节值分别为0x66和0x39。填写下表……</p></blockquote>]]></content>
      
      <categories>
          
          <category> CSAPP习题错误 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> CSAPPGE习题错误记录 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>深入理解计算机系统补充读物</title>
      <link href="/2020/10/10/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E8%A1%A5%E5%85%85%E8%AF%BB%E7%89%A9/"/>
      <url>/2020/10/10/%E6%B7%B1%E5%85%A5%E7%90%86%E8%A7%A3%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E8%A1%A5%E5%85%85%E8%AF%BB%E7%89%A9/</url>
      <content type="html"><![CDATA[<h1 id="深入理解计算机系统补充读物"><a href="#深入理解计算机系统补充读物" class="headerlink" title="深入理解计算机系统补充读物"></a>深入理解计算机系统补充读物</h1><ol><li>体系结构宗师 David Patterson写的《计算机组织与设计：硬件/软件接口》和《计算机体系架构：量化研究方法》，前一本书俗称算盘书，目前的第5版是RISC-V版本的，推荐原因：补充本书的第4章：处理器体系结构。</li><li>已故知名技术作家Richard Stevens写的《UNIX环境高级编程》，简称APUE，学习UNIX/LINUX系统编程的不二之选，推荐原因：补充本书的第8，10，11，12章内容。</li><li>Redhat公司的Ulrich Drepper写的文章《What Every Programmer Should Know About Memory》，全面系统地介绍了程序如何使用内存以及应该怎么做内存优化， 推荐原因：补充本书的第6章：存储器层次结构</li><li>俞甲子和石凡一起写的《程序员的自我修养:链接、装载与库》，介绍系统软件的运行机制和原理，讲解应用程序在编译、链接和运行时刻所发生的各种事项，推荐原因：补充本书的第7章：链接。</li></ol>]]></content>
      
      <categories>
          
          <category> CSAPP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 读物 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>IDEA的Main menu隐藏后如何恢复</title>
      <link href="/2020/01/18/IDEA%E7%9A%84Main-menu%E9%9A%90%E8%97%8F%E5%90%8E%E5%A6%82%E4%BD%95%E6%81%A2%E5%A4%8D/"/>
      <url>/2020/01/18/IDEA%E7%9A%84Main-menu%E9%9A%90%E8%97%8F%E5%90%8E%E5%A6%82%E4%BD%95%E6%81%A2%E5%A4%8D/</url>
      <content type="html"><![CDATA[<h3 id="如何恢复IDEA的Main-Menu"><a href="#如何恢复IDEA的Main-Menu" class="headerlink" title="如何恢复IDEA的Main Menu"></a>如何恢复IDEA的Main Menu</h3><p>很简单，不用去修改什么配置文件，只需要双击shift，然后在弹出的菜单里搜索Main Menu，点击off开关，打开就可以。</p>]]></content>
      
      <categories>
          
          <category> 使用 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 软件工具问题 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Thinking in Java Notes——没什么能逃得过反射</title>
      <link href="/2020/01/04/Thinking-in-Java/"/>
      <url>/2020/01/04/Thinking-in-Java/</url>
      <content type="html"><![CDATA[]]></content>
      
      
        <tags>
            
            <tag> Notes of Thinking in Java </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Polymorphism和类的初始化</title>
      <link href="/2019/06/25/Polymorphism%E5%92%8C%E7%B1%BB%E7%9A%84%E5%88%9D%E5%A7%8B%E5%8C%96/"/>
      <url>/2019/06/25/Polymorphism%E5%92%8C%E7%B1%BB%E7%9A%84%E5%88%9D%E5%A7%8B%E5%8C%96/</url>
      <content type="html"><![CDATA[<h2 id="在阅读"><a href="#在阅读" class="headerlink" title="在阅读"></a>在阅读</h2>]]></content>
      
      <categories>
          
          <category> 读书笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Thinking in Java </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>图片显示问题</title>
      <link href="/2019/06/18/%E5%9B%BE%E7%89%87%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98/"/>
      <url>/2019/06/18/%E5%9B%BE%E7%89%87%E6%98%BE%E7%A4%BA%E9%97%AE%E9%A2%98/</url>
      <content type="html"><![CDATA[<h1 id="Hello-world文章中的图片无法显示"><a href="#Hello-world文章中的图片无法显示" class="headerlink" title="Hello-world文章中的图片无法显示"></a>Hello-world文章中的图片无法显示</h1><p>今天打开blog看了一下，发现helloworld的文章突然无法显示了，决定再测试一下微博的是否仍然可以当作图床</p><p>第一张图片</p><img src="https://wx1.sinaimg.cn/mw690/9be83a1fgy1frbcaqng1nj20u01hcu0x.jpg"><p>今天刚传的一张图片</p><img src="https://wx2.sinaimg.cn/mw690/9be83a1fgy1g4590ujrmtj21401z4wr9.jpg"><p>查了一下，微博开始限制外链了</p><p>。。。</p><p>当然了，没有什么是大佬们解决不了的，在看了这一<a href="https://www.cnblogs.com/roadwide/p/10777593.html" target="_blank" rel="noopener">hexo博客微博图床失效解决办法</a>短小精悍的文章过后，问题成功解决了。</p><p>请大佬们再一次收下小弟的膝盖。。。。</p><p><img src="https://wx1.sinaimg.cn/mw690/9be83a1fgy1g4590vviusj21401z44is.jpg" alt="markdowm语法下的图片是否可以显示？"></p>]]></content>
      
      
        <tags>
            
            <tag> blog遇到的问题 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Java复习</title>
      <link href="/2019/01/17/Java%E5%A4%8D%E4%B9%A0/"/>
      <url>/2019/01/17/Java%E5%A4%8D%E4%B9%A0/</url>
      <content type="html"><![CDATA[<p>在码农翻身上看到了一篇Java复习的文章，里面提到了一些书，及记下来方便以后找，反正微信收藏了也不看。</p><h2 id="方向"><a href="#方向" class="headerlink" title="方向"></a>方向</h2><ul><li>JVM</li><li>排序算法和Java集合&amp;工具类</li><li>多线程和并发包</li><li>存储相关：Redis，Elastic Search，MySQL（现在都不用Oracle了？？）</li><li>框架：Spring全家桶（SpringMVC，SpringBoot）</li><li>分布式：Dubbo</li><li>设计模式</li></ul><h3 id="JVM"><a href="#JVM" class="headerlink" title="JVM"></a>JVM</h3><ul><li>《深入理解Java虚拟机：JVM高级特性与最佳实践（第2版）》</li><li>Oracle最新发布的Java虚拟机规范</li></ul><p>文章可信度排行：自建域名&gt;*.github.io&gt;SF&gt;简述=博客园&gt;CSDN&gt;转载</p><h3 id="排序算法和Java集合、工具类"><a href="#排序算法和Java集合、工具类" class="headerlink" title="排序算法和Java集合、工具类"></a>排序算法和Java集合、工具类</h3><p>文章里没有说要看什么书，只说了很重要，尤其是排序，我这里屯了一本《算法》，就是《Algorithms》–Fourth Edition Robert Sedewick and Kevin Wayne。主要是这本书是用Java实现的，我觉得配合Java刚刚好，而且网上评价也不错。</p><h3 id="多线程和并发包"><a href="#多线程和并发包" class="headerlink" title="多线程和并发包"></a>多线程和并发包</h3><p>这有这张图 <img src="https://image-static.segmentfault.com/323/604/3236047827-5c39fa79874ab">，该图片转载自<a href="https://segmentfault.com/u/majiangbiji" target="_blank" rel="noopener">码匠笔记</a>的这篇文章<a href="https://segmentfault.com/a/1190000017869016" target="_blank" rel="noopener">跳槽季如何快速全面复习面试题</a></p><h3 id="数据库丛书"><a href="#数据库丛书" class="headerlink" title="数据库丛书"></a>数据库丛书</h3><ul><li><p>《Redis设计与实现（数据库技术丛书）》</p></li><li><p>《高性能MySQL》</p></li><li>《ElasticSearch权威指南》</li></ul><p>算法很重要，ElasticSearch很多都与上面说到过的query算法有联系。</p><h3 id="框架"><a href="#框架" class="headerlink" title="框架"></a>框架</h3><ul><li>《Spring技术内幕》</li></ul><p>Spring全家桶</p><h3 id="分布式"><a href="#分布式" class="headerlink" title="分布式"></a>分布式</h3><p>Dubbo是一个代表，但是没有必要单纯去学习，公司有项目需求再说。（学习还是要放在算法和操作系统这些基础底层的东西啊！）</p><h3 id="设计模式"><a href="#设计模式" class="headerlink" title="设计模式"></a>设计模式</h3><p>码农翻身以前提到过《HeadFirst设计模式》，可以看这本书。然后不用可以学习，在实践中学习设计模式的应用，而不是死记硬背。</p><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><p>上面的内容有我总结的，还有自己想到的，没有分出来。总之，主要以算法，操作系统这两个基础为主。</p><hr><p>另外继续记录MarkDown语法参考网站</p><p><a href="http://www.markdown.cn/#images" target="_blank" rel="noopener">教程</a></p><p><a href="https://github.com/adam-p/markdown-here/wiki/Markdown-Cheatsheet#html" target="_blank" rel="noopener">MarkDown CheetSheet</a></p>]]></content>
      
      
        <tags>
            
            <tag> Java学习 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>永葆青春</title>
      <link href="/2018/12/20/%E6%B0%B8%E8%91%86%E9%9D%92%E6%98%A5/"/>
      <url>/2018/12/20/%E6%B0%B8%E8%91%86%E9%9D%92%E6%98%A5/</url>
      <content type="html"><![CDATA[<p>“码农翻身”公众号翻译了一篇文章，<a href="https://sizovs.net/2018/12/17/stop-learning-frameworks/" target="_blank" rel="noopener">别再学习框架了–Eduard Sizovs</a>里面提到了一些能够永保青春的书籍，记录下来，不然微信里点了收藏也不看，还是这个方便。</p><ul><li>《程序员的修炼之道》</li><li>《代码整洁之道》</li><li>《程序员的职业素养》</li><li>《领域驱动设计》</li><li>《测试驱动的面向对象软件开发》</li><li>《持续交付》</li><li>《深入理解操作系统》—CSAPP</li></ul><p>Markdown语法参考网站，还是写一下方便，省的每次找：<a href="https://coding.net/help/doc/project/markdown.html#i-4" target="_blank" rel="noopener">Markdown语法介绍</a>，还有，<a href="https://www.markdownguide.org/extended-syntax#tables" target="_blank" rel="noopener">Markdown Guide</a>，<a href="http://www.markdown.cn/" target="_blank" rel="noopener">Markdown教程</a>。Hexo官方文档也同样重要<a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">文档|Hexo</a>。</p><hr><p>记住在填上面tags等那些模板参数的时候，一定要先打一个空格，否则hexo server命令后会报错。</p>]]></content>
      
      
        <tags>
            
            <tag> 书籍 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hello World</title>
      <link href="/2018/05/12/hello-world/"/>
      <url>/2018/05/12/hello-world/</url>
      <content type="html"><![CDATA[<p>这是第一篇博客</p><p>第一篇博客嘛，标题肯定要是伟大的”hello world”了。这一篇主要用来测试。尝试插入图片之类。</p><p>博客的搭建是参考了<a href="https://blog.csdn.net/yimingsilence/article/details/53354041" target="_blank" rel="noopener">个人博客的搭建-github pages + hexo vs wordpress</a>，讲的非常的详细。以及<a href="https://hexo.io/zh-cn/docs" target="_blank" rel="noopener">Hexo官方文档</a>，还有<a href="https://material.viosey.com/docs" target="_blank" rel="noopener">Material Theme Docs</a>。</p><p>然后测试一下图片的插入。反正也只是为了用个有，就直接试试微博的图片，不去搞什么七牛或者又拍云了。</p><img src="https://wx1.sinaimg.cn/mw690/9be83a1fgy1frbcaqng1nj20u01hcu0x.jpg"><p>看来是可以用的啊。再放一张看看。</p><img src="https://wx4.sinaimg.cn/mw690/9be83a1fgy1frbcaz6534j21401z47wh.jpg"><p>嗯，应该是没问题了。</p><p>那么代码块呢。</p><pre><code class="javascript">alert(&quot;Hello World&quot;);function(a)function(b)</code></pre><pre><code class="java">System.out.println(&quot;Hello World&quot;);class A{    int i=0;    for(int j=0;j&lt;10;j++){        System.out.println(j);    }}</code></pre><pre><code>alert(&quot;Hello World&quot;)System.out.println(&quot;Hello World&quot;)</code></pre><p>直接用MarkDown的三个反向单引号也可以实现显示代码块，好像不需要使用codeblock模块嘛。</p><h4 id="好了，第一篇博客写完了。"><a href="#好了，第一篇博客写完了。" class="headerlink" title="好了，第一篇博客写完了。"></a>好了，第一篇博客写完了。</h4>]]></content>
      
      
    </entry>
    
  
  
</search>
